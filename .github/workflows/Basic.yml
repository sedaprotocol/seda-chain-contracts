on: [pull_request]

name: Basic

# Cancel in progress workflows on pull_requests.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout sources
        uses: actions/checkout@v4

      - name: ☁️ Install stable
        uses: dtolnay/rust-toolchain@1.86.0
        with:
          target: wasm32-unknown-unknown
          components: clippy

      - name: ☁️ Install Nextest
        uses: taiki-e/install-action@nextest

      - name: 📋 Run cargo clippy
        run: cargo clippy -- -D warnings

      - name: 📝 Generate Schema
        if: always()
        run: cargo schema --locked

      - name: ✔️ Schema Changes
        # fails if any changes not committed
        run: git diff --exit-code schema

      - name: 🦾 Compile WASM contract
        run: cargo build -p seda-contract --release --lib --target wasm32-unknown-unknown --locked

      - name: ☁️ Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: 🧪 Test & Coverage
        if: always()
        run: cargo cov-ci
        env:
          RUST_BACKTRACE: 1

      - name: 📊 Generate Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "cobertura.xml"
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          # thresholds: "10 30"

      - name: 💬 Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  fmt:
    name: fmt
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout sources
        uses: actions/checkout@v4

      - name: ☁️ Install Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: 📋 Format Check
        run: cargo +nightly fmt -- --check
